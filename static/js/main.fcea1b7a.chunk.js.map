{"version":3,"sources":["data.js","Components/Loading.js","Components/Chart1.js","Components/Chart2.js","Components/Chart3.js","Components/Dashboard.js","Components/GetToken.js","Components/ErrorComponent.js","App.js","reportWebVitals.js","index.js"],"names":["data1","_id","emailId","orgViewReq","organization","view","chartObject","metadata","title","img_thumbnail","chartType","dataLimit","requestParam","granularity","timeZone","name","location","dateRange","startDate","endDate","xAxis","yAxis","approxCountDistinct","specialCalculation","filter","orderBy","metricOrdByList","id","desc","percentCalList","data2","data3","text","customMetricOrdByList","Loading","Chart1","state","chart1Response","getData","fetch","method","headers","props","token","body","JSON","stringify","then","result","json","response","setState","data","catch","e","console","log","handleChange","target","value","this","length","style","textAlign","className","scope","map","i","index","publisherId","impressions_offered","Math","random","React","Component","Chart2","chart1Categories","arr1","arr2","res","push","appSiteId","parseInt","chartOptions","chart","type","categories","series","renderGraph","highcharts","Highcharts","options","Chart3","hoverData","arr","advertiserId","y","CM001_percent","Dashboard","isDateChanged","changedStartDate","changedEndDate","formatDate","dateVal","dateObj","Date","getFullYear","getMonth","getDate","handleClick","stDate","enDate","color","padding","paddingTop","htmlFor","min","max","onChange","disabled","borderRadius","onClick","GetToken","generateToken","email","password","rememberMe","setToken","background","width","ErrorComponent","hasError","children","error","App","tokenRxd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAaA,EAAQ,CACnBC,IAAK,yBACLC,QAAS,wBACTC,WAAY,CAAEC,aAAc,WAAYC,KAAM,WAC9CC,YAAa,CACXC,SAAU,CACRC,MAAO,4BACPC,cAAe,mBACfC,UAAW,QACXC,UAAW,IAEbC,aAAc,CACZC,YAAa,OACbC,SAAU,CAAEC,KAAM,eAAgBC,SAAU,OAC5CC,UAAW,CAAEC,UAAW,gBAAiBC,QAAS,iBAClDC,MAAO,CAAC,QACRC,MAAO,CAAC,QACRC,oBAAqB,GACrBC,mBAAoB,GACpBC,OAAQ,GACRC,QAAS,CAAEC,gBAAiB,CAAC,CAAEC,GAAI,OAAQC,MAAM,KACjDC,eAAgB,MAKTC,EAAQ,CACnB7B,IAAK,yBACLC,QAAS,wBACTC,WAAY,CAAEC,aAAc,WAAYC,KAAM,WAC9CC,YAAa,CACXC,SAAU,CACRC,MAAO,4BACPC,cAAe,mBACfC,UAAW,QACXC,UAAW,IAEbC,aAAc,CACZC,YAAa,OACbC,SAAU,CAAEC,KAAM,eAAgBC,SAAU,OAC5CC,UAAW,CAAEC,UAAW,gBAAiBC,QAAS,iBAClDC,MAAO,CAAC,QACRC,MAAO,CAAC,QACRC,oBAAqB,GACrBC,mBAAoB,GACpBC,OAAQ,GACRC,QAAS,CAAEC,gBAAiB,CAAC,CAAEC,GAAI,OAAQC,MAAM,KACjDC,eAAgB,MAKTE,EAAQ,CACnB9B,IAAK,kCACLC,QAAS,wBACTC,WAAY,CAAEC,aAAc,WAAYC,KAAM,WAC9CC,YAAa,CACXC,SAAU,CACRC,MAAO,GACPC,cAAe,iBACfC,UAAW,MACXC,UAAW,KAEbqB,KAAM,GACNpB,aAAc,CACZC,YAAa,OACbC,SAAU,CAAEC,KAAM,eAAgBC,SAAU,OAC5CC,UAAW,CAAEC,UAAW,gBAAiBC,QAAS,iBAClDC,MAAO,CAAC,QACRC,MAAO,GACPC,oBAAqB,GACrBC,mBAAoB,CAAC,SACrBC,OAAQ,GACRC,QAAS,CAAEQ,sBAAuB,CAAC,CAAEN,GAAI,QAASC,MAAM,KACxDC,eAAgB,CAAC,CAAEF,GAAI,aC1Ed,SAASO,IACtB,OACE,8BACE,+D,ICCeC,E,4MACnBC,MAAQ,CAAEC,eAAgB,GAAInB,UAAW,GAAIC,QAAS,I,EAStDmB,QAAU,WACRC,MAAM,gDAAiD,CACrDC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,eAAgB,EAAKC,MAAMC,OAE7BC,KAAMC,KAAKC,UAAU9C,KAEpB+C,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GAAD,OACJ,EAAKC,SAAS,CAAEd,eAAgBa,EAASF,OAAOI,UAEjDC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,kD,EAG9BC,aAAe,SAACH,GACd,EAAKH,SAAL,eACGG,EAAEI,OAAO3C,KAAOuC,EAAEI,OAAOC,S,kEAzB5BC,KAAKtB,UACLsB,KAAKT,SAAS,CACZjC,UAAW0C,KAAKlB,MAAMxB,UACtBC,QAASyC,KAAKlB,MAAMvB,Y,+BA0Bd,IACAkB,EAAmBuB,KAAKxB,MAAxBC,eACR,OACE,mCACGA,EAAewB,OAAS,EACvB,qCACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,oBACA,wBAAOC,UAAU,qBAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,sCAGJ,gCACG5B,EAAe6B,KAAI,SAACC,EAAGC,GAAJ,OAClB,+BACE,oBAAIH,MAAM,MAAV,SAAiBG,EAAQ,IACzB,6BAAKD,EAAEE,cACP,6BAAKF,EAAEG,wBAHAC,KAAKC,qBAUtB,cAACtC,EAAD,U,GA3D0BuC,IAAMC,W,gCCErBC,E,4MACnBvC,MAAQ,CACNwC,iBAAkB,GAClBvC,eAAgB,I,kEAEG,IAAD,OACdwC,EAAO,GACPC,EAAO,GACXvC,MAAM,gDAAiD,CACrDC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,eAAgBmB,KAAKlB,MAAMC,OAE7BC,KAAMC,KAAKC,UAAUhB,KAEpBiB,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GAKL,OAJAA,EAASF,OAAOI,KAAKc,KAAI,SAACa,GACxBF,EAAKG,KAAKD,EAAIE,WACdH,EAAKE,KAAKE,SAASH,EAAIT,yBAElB,CAACO,EAAMC,MAEf/B,MAAK,SAACK,GAAD,OACJ,EAAKD,SAAS,CACZyB,iBAAkBxB,EAAK,GACvBf,eAAgBe,EAAK,QAGxBC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,mD,+BAI5B,IAAI2B,EAAe,CACjBC,MAAO,CACLC,KAAM,OAER7E,MAAO,CACLwB,KAAM,WAERZ,MAAO,CACLkE,WAAY1B,KAAKxB,MAAMwC,iBACvBpE,MAAO,CACLwB,KAAM,OAGVuD,OAAQ,CACN,CACExE,KAAM,sBACNqC,KAAMQ,KAAKxB,MAAMC,kBAKjBmD,EACJ5B,KAAKxB,MAAMwC,iBAAiBf,OAAS,EACnC,cAAC,IAAD,CAAiB4B,WAAYC,IAAYC,QAASR,IAElD,cAACjD,EAAD,IAEJ,OAAO,mCAAGsD,Q,GA7DsBf,IAAMC,WCArBkB,E,4MACnBxD,MAAQ,CACNC,eAAgB,GAChBwD,UAAW,M,kEAEQ,IAAD,OACdC,EAAM,GACVvD,MAAM,gDAAiD,CACrDC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,eAAgBmB,KAAKlB,MAAMC,OAE7BC,KAAMC,KAAKC,UAAUf,KAEpBgB,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GAIL,OAHAA,EAASF,OAAOI,KAAKc,KAAI,SAACa,GAAD,OACvBe,EAAId,KAAK,CAAEjE,KAAMgE,EAAIgB,aAAcC,EAAGd,SAASH,EAAIkB,oBAE9CH,KAER/C,MAAK,SAACK,GAAD,OAAU,EAAKD,SAAS,CAAEd,eAAgBe,OAC/CC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,mD,+BAI5B,IAAI2B,EAAe,CACjBC,MAAO,CACLC,KAAM,OAER7E,MAAO,CACLwB,KAAM,WAERuD,OAAQ,CACN,CACExE,KAAM,gBACNqC,KAAMQ,KAAKxB,MAAMC,kBAIjBmD,EACJ5B,KAAKxB,MAAMC,eAAewB,OAAS,EACjC,cAAC,IAAD,CAAiB4B,WAAYC,IAAYC,QAASR,IAElD,cAACjD,EAAD,IAEJ,OAAO,mCAAGsD,Q,GA/CsBf,IAAMC,WCDrBwB,E,4MACnB9D,MAAQ,CACNlB,UAAW,GACXC,QAAS,GACTgF,eAAe,EACfC,iBAAkB,GAClBC,eAAgB,I,EAuBlBC,WAAa,SAACC,GACZ,IAAIC,EAAU,IAAIC,KAAKvB,SAASqB,IAChC,MAAM,GAAN,OAAUC,EAAQE,cAAlB,aAAoCF,EAAQG,WAA5C,aAA2DH,EAAQI,Y,EAGrEnD,aAAe,SAACH,GACd,EAAKH,SAAL,eACGG,EAAEI,OAAO3C,KAAOuC,EAAEI,OAAOC,S,EAI9BkD,YAAc,WAAO,IAAD,EACa,EAAKzE,MAA5BlB,EADU,EACVA,UAAWC,EADD,EACCA,QACfD,GAAaC,GACf,EAAKgC,SAAS,CACZgD,eAAe,EACfC,iBAAkBlF,EAClBmF,eAAgBlF,K,kEAtCD,IAAD,OAClBoB,MAAM,qDAAsD,CAC1DC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,eAAgBmB,KAAKlB,MAAMC,OAE7BC,KAAMC,KAAKC,UAAU,CAAE1C,aAAc,WAAYC,KAAM,cAEtD0C,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GACL,IAAI4D,EAAS,EAAKR,WAAWpD,EAASF,OAAO9B,WACzC6F,EAAS,EAAKT,WAAWpD,EAASF,OAAO7B,SAC7C,EAAKgC,SAAS,CACZjC,UAAW4F,EACX3F,QAAS4F,OAGZ1D,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,uC,+BA0B5B,OACE,gCACE,qBAAKQ,UAAU,6BAAf,SACE,oBAAIF,MAAO,CAAEkD,MAAO,OAAQC,QAAS,YAArC,yBAEF,sBAAKjD,UAAU,kBAAkBF,MAAO,CAAEoD,WAAY,QAAtD,UACE,sBAAKlD,UAAU,+BAAf,UACE,uBAAOmD,QAAQ,QAAf,yBACA,uBACEnD,UAAU,aACVqB,KAAK,OACL1D,GAAG,QACHZ,KAAK,YACL4C,MAAOC,KAAKxB,MAAMlB,UAClBkG,IAAKxD,KAAKxB,MAAMlB,UAChBmG,IAAKzD,KAAKxB,MAAMjB,QAChBmG,SAAU1D,KAAKH,eAVnB,WAaE,uBAAO0D,QAAQ,QAAf,uBACA,uBACEnD,UAAU,aACVqB,KAAK,OACL1D,GAAG,QACHZ,KAAK,UACL4C,MAAOC,KAAKxB,MAAMjB,QAClBiG,IAAKxD,KAAKxB,MAAMlB,UAChBmG,IAAKzD,KAAKxB,MAAMjB,QAChBmG,SAAU1D,KAAKH,eAEjB,wBACE8D,UAAQ,EACRlC,KAAK,SACLrB,UAAU,8BACVF,MAAO,CAAE0D,aAAc,OACvBC,QAAS7D,KAAKiD,YALhB,uBAWF,sBAAK7C,UAAU,MAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,aAAQrB,MAAOiB,KAAKlB,MAAMC,OAAWiB,KAAKxB,UAE5C,sBAAK4B,UAAU,WAAf,UACE,cAAC,EAAD,CAAQrB,MAAOiB,KAAKlB,MAAMC,QAC1B,uBACA,cAAC,EAAD,CAAQA,MAAOiB,KAAKlB,MAAMC,wB,GApGD8B,IAAMC,WC8C9BgD,E,4MAhDbC,cAAgB,WAMdpF,MAAM,wCAAyC,CAC7CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBG,KAAMC,KAAKC,UAVA,CACX8E,MAAO,wBACPC,SAAU,cACVC,YAAY,MASX/E,MAAK,SAACgC,GAAD,OAASA,EAAI9B,UAClBF,MAAK,SAACK,GACL,EAAKV,MAAMqF,SAAS3E,EAAKT,UAE1BU,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAI,gD,uDAI5B,OACE,qBACEQ,UAAU,kBACVrC,GAAG,cACHmC,MAAO,CAAEkE,WAAY,WAHvB,SAKE,sBAAKhE,UAAU,MAAf,UACE,oBAAIF,MAAO,CAAEC,UAAW,SAAUiD,MAAO,SAAzC,uCAGA,qBAAKhD,UAAU,cAAf,SACE,yBACEqB,KAAK,SACLrB,UAAU,mCACVyD,QAAS7D,KAAK+D,cACd7D,MAAO,CAAEmE,MAAO,OAJlB,gCAOE,mBAAGjE,UAAU,oC,GAxCJS,IAAMC,WCDRwD,E,kDACnB,WAAYxF,GAAQ,IAAD,8BACjB,cAAMA,IACDN,MAAQ,CAAE+F,UAAU,GAFR,E,qDAUjB,OAAIvE,KAAKxB,MAAM+F,SACN,uDAGFvE,KAAKlB,MAAM0F,Y,gDATYC,GAC9B,MAAO,CAAEF,UAAU,O,GAPqB1D,IAAMC,WC+BnC4D,E,4MAzBblG,MAAQ,CACNO,MAAO,I,EAKToF,SAAW,SAACQ,GACV,EAAKpF,SAAS,CAAER,MAAO4F,K,uDAIvB,OACE,qBAAKvE,UAAU,MAAf,SACE,cAAC,EAAD,UACGJ,KAAKxB,MAAMO,MACV,cAAC,EAAD,CAAWA,MAAOiB,KAAKxB,MAAMO,QAE7B,cAAC,EAAD,CAAUoF,SAAUnE,KAAKmE,mB,GAlBnBtD,IAAMC,WCMT8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3F,MAAK,YAAkD,IAA/C4F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcea1b7a.chunk.js","sourcesContent":["export const data1 = {\r\n  _id: \"dashboard1516252439345\",\r\n  emailId: \"candidate@sigmoid.com\",\r\n  orgViewReq: { organization: \"DemoTest\", view: \"Auction\" },\r\n  chartObject: {\r\n    metadata: {\r\n      title: \"chartobject:1516252439345\",\r\n      img_thumbnail: \"../img/chart.png\",\r\n      chartType: \"table\",\r\n      dataLimit: 50,\r\n    },\r\n    requestParam: {\r\n      granularity: \"hour\",\r\n      timeZone: { name: \"UTC (+00:00)\", location: \"UTC\" },\r\n      dateRange: { startDate: \"1493337600000\", endDate: \"1493510400000\" },\r\n      xAxis: [\"D044\"],\r\n      yAxis: [\"M002\"],\r\n      approxCountDistinct: [],\r\n      specialCalculation: [],\r\n      filter: [],\r\n      orderBy: { metricOrdByList: [{ id: \"M002\", desc: true }] },\r\n      percentCalList: [],\r\n    },\r\n  },\r\n};\r\n\r\nexport const data2 = {\r\n  _id: \"dashboard1516252235693\",\r\n  emailId: \"candidate@sigmoid.com\",\r\n  orgViewReq: { organization: \"DemoTest\", view: \"Auction\" },\r\n  chartObject: {\r\n    metadata: {\r\n      title: \"chartobject:1516252235693\",\r\n      img_thumbnail: \"../img/chart.png\",\r\n      chartType: \"table\",\r\n      dataLimit: 50,\r\n    },\r\n    requestParam: {\r\n      granularity: \"hour\",\r\n      timeZone: { name: \"UTC (+00:00)\", location: \"UTC\" },\r\n      dateRange: { startDate: \"1493337600000\", endDate: \"1493510400000\" },\r\n      xAxis: [\"D017\"],\r\n      yAxis: [\"M002\"],\r\n      approxCountDistinct: [],\r\n      specialCalculation: [],\r\n      filter: [],\r\n      orderBy: { metricOrdByList: [{ id: \"M002\", desc: true }] },\r\n      percentCalList: [],\r\n    },\r\n  },\r\n};\r\n\r\nexport const data3 = {\r\n  _id: \"Datastory_ChartId_1535224664111\",\r\n  emailId: \"candidate@sigmoid.com\",\r\n  orgViewReq: { organization: \"DemoTest\", view: \"Auction\" },\r\n  chartObject: {\r\n    metadata: {\r\n      title: \"\",\r\n      img_thumbnail: \"images/pie.png\",\r\n      chartType: \"pie\",\r\n      dataLimit: 500,\r\n    },\r\n    text: [],\r\n    requestParam: {\r\n      granularity: \"hour\",\r\n      timeZone: { name: \"UTC (+00:00)\", location: \"UTC\" },\r\n      dateRange: { startDate: \"1493424000000\", endDate: \"1493596800000\" },\r\n      xAxis: [\"D005\"],\r\n      yAxis: [],\r\n      approxCountDistinct: [],\r\n      specialCalculation: [\"CM001\"],\r\n      filter: [],\r\n      orderBy: { customMetricOrdByList: [{ id: \"CM001\", desc: true }] },\r\n      percentCalList: [{ id: \"CM001\" }],\r\n    },\r\n  },\r\n};\r\n","export default function Loading() {\r\n  return (\r\n    <div>\r\n      <h6>Loading data please wait...</h6>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { data1 } from \"../data\";\r\nimport Loading from \"./Loading\";\r\n\r\nexport default class Chart1 extends React.Component {\r\n  state = { chart1Response: [], startDate: \"\", endDate: \"\" };\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.setState({\r\n      startDate: this.props.startDate,\r\n      endDate: this.props.endDate,\r\n    });\r\n  }\r\n\r\n  getData = () => {\r\n    fetch(\"https://sigviewauth.sigmoid.io/api/v1/getData\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": this.props.token,\r\n      },\r\n      body: JSON.stringify(data1),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((response) =>\r\n        this.setState({ chart1Response: response.result.data })\r\n      )\r\n      .catch((e) => console.log(\"fetching chart1 getting error!please check\"));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { chart1Response } = this.state;\r\n    return (\r\n      <>\r\n        {chart1Response.length > 0 ? (\r\n          <>\r\n            <h4 style={{ textAlign: \"center\" }}>Chart1</h4>\r\n            <table className=\"table table-hover \">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Publisher Id</th>\r\n                  <th scope=\"col\">Impressions Offered</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {chart1Response.map((i, index) => (\r\n                  <tr key={Math.random()}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{i.publisherId}</td>\r\n                    <td>{i.impressions_offered}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { data2 } from \"../data\";\r\nimport Loading from \"./Loading\";\r\n\r\nexport default class Chart2 extends React.Component {\r\n  state = {\r\n    chart1Categories: [],\r\n    chart1Response: [],\r\n  };\r\n  componentDidMount() {\r\n    let arr1 = [];\r\n    let arr2 = [];\r\n    fetch(\"https://sigviewauth.sigmoid.io/api/v1/getData\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": this.props.token,\r\n      },\r\n      body: JSON.stringify(data2),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((response) => {\r\n        response.result.data.map((res) => {\r\n          arr1.push(res.appSiteId);\r\n          arr2.push(parseInt(res.impressions_offered));\r\n        });\r\n        return [arr1, arr2];\r\n      })\r\n      .then((data) =>\r\n        this.setState({\r\n          chart1Categories: data[0],\r\n          chart1Response: data[1],\r\n        })\r\n      )\r\n      .catch((e) => console.log(\"fetching chart2 getting error!please check\"));\r\n  }\r\n\r\n  render() {\r\n    var chartOptions = {\r\n      chart: {\r\n        type: \"bar\",\r\n      },\r\n      title: {\r\n        text: \"Chart 2\",\r\n      },\r\n      xAxis: {\r\n        categories: this.state.chart1Categories,\r\n        title: {\r\n          text: null,\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Impressions Offered\",\r\n          data: this.state.chart1Response,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const renderGraph =\r\n      this.state.chart1Categories.length > 0 ? (\r\n        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n      ) : (\r\n        <Loading />\r\n      );\r\n    return <>{renderGraph}</>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { data3 } from \"../data\";\r\nimport Loading from \"./Loading\";\r\n\r\nexport default class Chart3 extends React.Component {\r\n  state = {\r\n    chart1Response: [],\r\n    hoverData: null,\r\n  };\r\n  componentDidMount() {\r\n    let arr = [];\r\n    fetch(\"https://sigviewauth.sigmoid.io/api/v1/getData\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": this.props.token,\r\n      },\r\n      body: JSON.stringify(data3),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((response) => {\r\n        response.result.data.map((res) =>\r\n          arr.push({ name: res.advertiserId, y: parseInt(res.CM001_percent) })\r\n        );\r\n        return arr;\r\n      })\r\n      .then((data) => this.setState({ chart1Response: data }))\r\n      .catch((e) => console.log(\"fetching chart3 getting error!please check\"));\r\n  }\r\n\r\n  render() {\r\n    var chartOptions = {\r\n      chart: {\r\n        type: \"pie\",\r\n      },\r\n      title: {\r\n        text: \"Chart 3\",\r\n      },\r\n      series: [\r\n        {\r\n          name: \"CM001_percent\",\r\n          data: this.state.chart1Response,\r\n        },\r\n      ],\r\n    };\r\n    const renderGraph =\r\n      this.state.chart1Response.length > 0 ? (\r\n        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n      ) : (\r\n        <Loading />\r\n      );\r\n    return <>{renderGraph}</>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Chart1 from \"./Chart1\";\r\nimport Chart2 from \"./Chart2\";\r\nimport Chart3 from \"./Chart3\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n  state = {\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    isDateChanged: false,\r\n    changedStartDate: \"\",\r\n    changedEndDate: \"\",\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://sigviewauth.sigmoid.io/api/v1/getDateRange\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": this.props.token,\r\n      },\r\n      body: JSON.stringify({ organization: \"DemoTest\", view: \"Auction\" }),\r\n    })\r\n      .then((result) => result.json())\r\n      .then((response) => {\r\n        let stDate = this.formatDate(response.result.startDate);\r\n        let enDate = this.formatDate(response.result.endDate);\r\n        this.setState({\r\n          startDate: stDate,\r\n          endDate: enDate,\r\n        });\r\n      })\r\n      .catch((e) => console.log(\"date cannot be fetched. Retry.\"));\r\n  }\r\n\r\n  formatDate = (dateVal) => {\r\n    let dateObj = new Date(parseInt(dateVal));\r\n    return `${dateObj.getFullYear()}-0${dateObj.getMonth()}-0${dateObj.getDate()}`;\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { startDate, endDate } = this.state;\r\n    if (startDate && endDate) {\r\n      this.setState({\r\n        isDateChanged: true,\r\n        changedStartDate: startDate,\r\n        changedEndDate: endDate,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n          <h3 style={{ color: \"#FFF\", padding: \"0px 20px\" }}>Dashboard</h3>\r\n        </nav>\r\n        <div className=\"container-fluid\" style={{ paddingTop: \"20px\" }}>\r\n          <div className=\"input-group mb-1 alignCenter\">\r\n            <label htmlFor=\"start\">Start date:</label>\r\n            <input\r\n              className=\"inputDates\"\r\n              type=\"date\"\r\n              id=\"start\"\r\n              name=\"startDate\"\r\n              value={this.state.startDate}\r\n              min={this.state.startDate}\r\n              max={this.state.endDate}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp;&nbsp;\r\n            <label htmlFor=\"start\">End date:</label>\r\n            <input\r\n              className=\"inputDates\"\r\n              type=\"date\"\r\n              id=\"start\"\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n              min={this.state.startDate}\r\n              max={this.state.endDate}\r\n              onChange={this.handleChange}\r\n            />\r\n            <button\r\n              disabled\r\n              type=\"button\"\r\n              className=\"btn btn-outline-dark btn-sm\"\r\n              style={{ borderRadius: \"5px\" }}\r\n              onClick={this.handleClick}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 graph1Style\">\r\n              <Chart1 token={this.props.token} {...this.state} />\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <Chart2 token={this.props.token}></Chart2>\r\n              <hr />\r\n              <Chart3 token={this.props.token}></Chart3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass GetToken extends React.Component {\r\n  generateToken = () => {\r\n    const data = {\r\n      email: \"candidate@sigmoid.com\",\r\n      password: \"Sigmoid@123\",\r\n      rememberMe: true,\r\n    };\r\n    fetch(\"https://sigviewauth.sigmoid.io/signIn\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.props.setToken(data.token);\r\n      })\r\n      .catch((e) => console.log(\"something wnet wrong while getting token\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n        id=\"landingPage\"\r\n        style={{ background: \"#515e7b\" }}\r\n      >\r\n        <div className=\"row\">\r\n          <h1 style={{ textAlign: \"center\", color: \"white\" }}>\r\n            Welcome to the Dashboard!\r\n          </h1>\r\n          <div className=\"alignCenter\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-lg btn-block\"\r\n              onClick={this.generateToken}\r\n              style={{ width: \"50%\" }}\r\n            >\r\n              Get Started&nbsp;&nbsp;\r\n              <i className=\"fa fa-arrow-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetToken;\r\n","import React from \"react\";\r\nexport default class ErrorComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport GetToken from \"./Components/GetToken\";\r\nimport ErrorComponent from \"./Components/ErrorComponent\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    token: \"\",\r\n  };\r\n  // token:\r\n  // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyLUNLbUlmd3RCemo2UFl2cVIyM3BRUVg0UlVNZFZSRFhaTzNHU1lnY055c2Ewcm9mQUFsOWwwTWtDK0dDS1lBaEl3RWM5N1NqTUFwNUdQSE1JY21mZ0xyVnltVHo4OStVZ0lWUk0rUFBlV3l1RnRBPT0iLCJpc3MiOiJyYWh1bGt1bWFyIiwiZXhwIjoxNjEyMTA2MTY1LCJpYXQiOjE2MTIwMTk3NjUsImp0aSI6IjU3ZTg5YmNiYjJjYWI5OTA3N2M4YWVhMTY2YmM2NDI1OTUwNTgzYjkxNzFjZGFlMDQwNzE5NGIzYmRhODYwMjA3NTU0YzAxZGQ4MDg0NjUyYWY5NTU1MTc5ZmYzMjNlMjAyNTRjOTZmZDAxNjRiZDdkNWE3ZDM3MzFlZDdkNGNmNWQwODE1Y2E5NTAyZjVkMzRlODI5Y2M2MWYwZjQ2MTEzYzJhNDBhYTUzMDkxODNjYjgxYTFjYTQwMzA5NTNkYTJkOGNjOTljMGE5NWVkYzdiMjg1NzJhYTcyZThiNDkxYjNmMTI4OTQ1ZGU4MDg3MzM0YTUwODI1YmQxNmNhZjYifQ.0uW83-Bc4lzwcdcibE57-NL94fHIlBAcAp5huKg-Zzs\",\r\n\r\n  setToken = (tokenRxd) => {\r\n    this.setState({ token: tokenRxd });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ErrorComponent>\r\n          {this.state.token ? (\r\n            <Dashboard token={this.state.token} />\r\n          ) : (\r\n            <GetToken setToken={this.setToken} />\r\n          )}\r\n        </ErrorComponent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}